EBNF 完整版

module = {block}

block = functionBlock

functionBlock = "fn" identifier [typeParams] "(" parameters ")" type "{" exp_list "}"

typeParams = "[" identifier  {"," identifier}  "]"

parameters = e | varNameType {"," varNameType}

varNameType = identifier ":" type
exp_list  = { exp1 ";"}
exp1 = exp2 {assign_op exp2}
#以后用来加?:
exp2 = exp3  
#----------
exp3 = exp4 {binary_op exp4}
exp4 = identifier|function_call|const|"("exp1")"

# todo
type = identifier